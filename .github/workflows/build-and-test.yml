name: Build and Test
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: YourStrong@Password1
        ports:
          - 1433:1433
        options: >-
          --memory=3g
          --health-cmd="/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong@Password1 -Q 'SELECT 1'" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Wait for SQL Server to be ready
        run: |
          for i in {1..30}; do
            /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong@Password1 -Q "SELECT 1" && break
            echo "SQL Server not ready yet..."
            sleep 5
          done

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --configuration Release --no-restore

      - name: Run tests
        run: dotnet test --configuration Release --no-build --verbosity normal

      - name: Show debug logs (if fail)
        if: failure()
        run: |
          docker ps -a
          for cid in $(docker ps -q); do
            echo "=== Logs for container $cid ==="
            docker logs --tail 200 $cid || true
          done
